ausf:
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}
bsf:
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}
nrf:
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}
pcf:
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

hss:
  enabled: false

mme:
  enabled: false

pcrf:
  enabled: false

smf:
  config:
    pcrf:
      enabled: false
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

sgwc:
  enabled: false

sgwu:
  enabled: false

amf:
  config:
    guamiList:
      - plmn_id:
          mcc: "999"
          mnc: "70"
        amf_id:
          region: 2
          set: 1
    taiList:
      - plmn_id:
          mcc: "999"
          mnc: "70"
        tac: [1]
    plmnList:
      - plmn_id:
          mcc: "999"
          mnc: "70"
        s_nssai:
          - sst: 1
            sd: "0x111111"
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

udr:
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

udm:
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

upf:
  replicaCount: 1

# uncomment below line to select a single node
#  nodeSelector: {eks.amazonaws.com/nodegroup : upf-bedc-small}

  # affinity logic to deploy pods in multiple nodegroups
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: upfInstanceSize
            operator: In
            values:
            - Small
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - upf
          topologyKey: kubernetes.io/hostname

nssf:
  config:
    nsiList:
      - nrf:
          hostname: ""  # if empty default is autogenerated open5gs svc fullname
          port: 7777
        sst: 1
        sd: "0x111111"
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

webui:
  enabled: false
  ingress:
    enabled: false
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}

populate:
  enabled: true
  nodeSelector: {eks.amazonaws.com/nodegroup : iot-nap-nodes}